{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\"; // import authErrorInterceptor from '_middlewares/authErrorInterceptor';\n\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"../_reducers\";\n\nvar configureStore = function configureStore() {\n  var middlewares = [thunkMiddleware]; // redux devtools\n\n  var enhancers = process.env.NODE_ENV === \"development\" ? composeWithDevTools(applyMiddleware.apply(void 0, middlewares)) : applyMiddleware.apply(void 0, middlewares); // create redux store\n\n  var store = createStore(rootReducer, enhancers);\n  return store;\n};\n\nexport default configureStore;","map":{"version":3,"sources":["/data/ayush/exampe/atram-admin/src/_store/configureStore.js"],"names":["createStore","applyMiddleware","thunkMiddleware","composeWithDevTools","rootReducer","configureStore","middlewares","enhancers","process","env","NODE_ENV","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,eAAP,MAA4B,aAA5B,C,CACA;;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,WAAP,MAAwB,cAAxB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,MAAMC,WAAW,GAAG,CAACJ,eAAD,CAApB,CAD2B,CAE3B;;AACA,MAAMK,SAAS,GACbC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GACIP,mBAAmB,CAACF,eAAe,MAAf,SAAmBK,WAAnB,CAAD,CADvB,GAEIL,eAAe,MAAf,SAAmBK,WAAnB,CAHN,CAH2B,CAO3B;;AACA,MAAMK,KAAK,GAAGX,WAAW,CAACI,WAAD,EAAcG,SAAd,CAAzB;AACA,SAAOI,KAAP;AACD,CAVD;;AAYA,eAAeN,cAAf","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\n// import authErrorInterceptor from '_middlewares/authErrorInterceptor';\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"../_reducers\";\n\nconst configureStore = () => {\n  const middlewares = [thunkMiddleware];\n  // redux devtools\n  const enhancers =\n    process.env.NODE_ENV === \"development\"\n      ? composeWithDevTools(applyMiddleware(...middlewares))\n      : applyMiddleware(...middlewares);\n  // create redux store\n  const store = createStore(rootReducer, enhancers);\n  return store;\n};\n\nexport default configureStore;\n"]},"metadata":{},"sourceType":"module"}
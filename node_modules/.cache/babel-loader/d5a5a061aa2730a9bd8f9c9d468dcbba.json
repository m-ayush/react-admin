{"ast":null,"code":"import _defineProperty from \"/data/ayush/exampe/atram-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { actionTypes } from \"../_actions/user.action\";\nvar initialState = {\n  meta: {}\n};\n\nvar user = function user() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.LOGIN_USER_SUCCESS:\n      var _user = action.user;\n      return _objectSpread({}, _user, {\n        meta: {\n          loading: false\n        }\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default user;","map":{"version":3,"sources":["/data/ayush/exampe/atram-admin/src/_reducers/user.reducers.js"],"names":["actionTypes","initialState","meta","user","state","action","type","LOGIN_USER_SUCCESS","loading"],"mappings":";;;;;;AAAA,SAASA,WAAT,QAA4B,yBAA5B;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AADa,CAArB;;AAIA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,WAAW,CAACO,kBAAjB;AAAA,UACUJ,KADV,GACmBE,MADnB,CACUF,IADV;AAEE,+BACKA,KADL;AAEED,QAAAA,IAAI,EAAE;AACJM,UAAAA,OAAO,EAAE;AADL;AAFR;;AAOF;AACE,aAAOJ,KAAP;AAXJ;AAaD,CAdD;;AAgBA,eAAeD,IAAf","sourcesContent":["import { actionTypes } from \"../_actions/user.action\";\n\nconst initialState = {\n  meta: {}\n};\n\nconst user = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.LOGIN_USER_SUCCESS:\n      const { user } = action;\n      return {\n        ...user,\n        meta: {\n          loading: false\n        }\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default user;\n"]},"metadata":{},"sourceType":"module"}